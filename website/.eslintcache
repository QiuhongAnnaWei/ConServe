[{"/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/index.js":"1","/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/reportWebVitals.js":"2","/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/App.js":"3","/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/pages/Recipes.js":"4","/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/pages/GroceryList.js":"5"},{"size":560,"mtime":1607242838086,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1607241191956,"results":"8","hashOfConfig":"7"},{"size":1036,"mtime":1607259941762,"results":"9","hashOfConfig":"7"},{"size":2689,"mtime":1607259844947,"results":"10","hashOfConfig":"7"},{"size":5539,"mtime":1607250844803,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1wvuk4",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/index.js",[],["24","25"],"/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/reportWebVitals.js",[],"/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/App.js",["26","27","28"],"/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/pages/Recipes.js",["29"],"/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/pages/GroceryList.js",["30","31","32"],"import React, { Component } from \"react\";\nimport './GroceryList.css';\nimport { InputGroup, FormControl, Button, Table } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.textInput = React.createRef();\n    }\n    render() {\n        return (\n            <InputGroup className=\"mb-3\">\n                <InputGroup.Prepend>\n                    <InputGroup.Text id=\"basic-addon1\">Enter Ingredient</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                    ref={this.textInput}\n                    placeholder=\"Ingredient\"\n                    aria-label=\"Ingredient\"\n                    aria-describedby=\"Ingredient-field\"\n                />\n                <InputGroup.Append>\n                    <Button\n                        variant=\"secondary\"\n                        type=\"Submit\"\n                        onClick={() => { this.props.addIngredient(this.textInput.current.value) }}\n                    >+ Add</Button>\n                </InputGroup.Append>\n            </InputGroup>\n        )\n    }\n}\n\nclass List extends React.Component {\n\n    formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n\n        if (month.length < 2)\n            month = '0' + month;\n        if (day.length < 2)\n            day = '0' + day;\n\n        return [year, month, day].join('-');\n    }\n\n    render() {\n        return (\n            <div className=\"groceryListList\">\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Ingredient</th>\n                            <th>Expiry Date</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.ingredients.map((ingredient) => (\n                            <tr key={ingredient.id}>\n                                <td>{ingredient.name}</td>\n                                <td className=\"ingredientExpiry\">\n                                    {this.formatDate(ingredient.expiryDate)}\n                                    <div>\n                                        <Button\n                                            variant=\"outline-secondary\"\n                                            onClick={() => this.props.deleteIngredient(ingredient.id)}\n                                            className=\"editButton\"\n                                        >Edit</Button>\n                                        <Button\n                                            variant=\"outline-danger\"\n                                            onClick={() => this.props.deleteIngredient(ingredient.id)}\n                                        >Delete</Button>\n                                    </div>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            </div>\n        )\n    }\n}\n\nexport class Page extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nextid: 2,\n            ingredients: [\n                {\n                    id: 0,\n                    name: \"Apple\",\n                    expiryDate: Date.now()\n                },\n                {\n                    id: 1,\n                    name: \"Milk\",\n                    expiryDate: Date.now()\n                }\n            ],\n            expiryDB: [\n                {\n                    name: \"Apple\",\n                    expiryTimeFrame: 10 // days\n                },\n                {\n                    name: \"Bread\",\n                    expiryTimeFrame: 10 // days\n                },\n                {\n                    name: \"Milk\",\n                    expiryTimeFrame: 10 // days\n                },\n            ],\n            selected: []\n        }\n    }\n\n    addIngredient(ingredientName) {\n        var expire = new Date();\n\n        for (const item of this.state.expiryDB) {\n            if (item.name == ingredientName) {\n                expire.setDate(expire.getDate() + item.expiryTimeFrame);\n                break;\n            }\n        }\n\n        let ingredient = {\n            id: this.state.nextid,\n            name: ingredientName,\n            expiryDate: expire\n        }\n        this.setState({ nextid: this.state.nextid + 1, ingredients: [...this.state.ingredients, ingredient] })\n    }\n\n    deleteIngredient(id) {\n        var array = [...this.state.ingredients]; // make a separate copy of the array\n        var index = array.findIndex((i) => { return i.id === id });\n        if (index !== -1) {\n            array.splice(index, 1);\n            this.setState({ ingredients: array });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"groceryListBody\">\n                <div className=\"groceryListInner\">\n                    <Input\n                        addIngredient={(i) => this.addIngredient(i)}\n                    ></Input>\n                    <List\n                        ingredients={this.state.ingredients}\n                        deleteIngredient={(i) => this.deleteIngredient(i)}\n                    ></List>\n                    <Button variant=\"primary\">Generate Recipes!</Button>\n                </div>\n            </div>\n        )\n    }\n}",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":2,"column":17,"nodeType":"39","messageId":"40","endLine":2,"endColumn":26},{"ruleId":"37","severity":1,"message":"41","line":3,"column":8,"nodeType":"39","messageId":"40","endLine":3,"endColumn":12},{"ruleId":"37","severity":1,"message":"42","line":11,"column":3,"nodeType":"39","messageId":"40","endLine":11,"endColumn":12},{"ruleId":"37","severity":1,"message":"38","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":26},{"ruleId":"37","severity":1,"message":"38","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":26},{"ruleId":"37","severity":1,"message":"43","line":5,"column":10,"nodeType":"39","messageId":"40","endLine":5,"endColumn":23},{"ruleId":"44","severity":1,"message":"45","line":128,"column":27,"nodeType":"46","messageId":"47","endLine":128,"endColumn":29},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'useParams' is defined but never used.","'ThemeConsumer' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]
