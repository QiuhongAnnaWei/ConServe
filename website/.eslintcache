[{"/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/index.js":"1","/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/reportWebVitals.js":"2","/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/App.js":"3","/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/pages/Recipes.js":"4","/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/pages/GroceryList.js":"5","/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/components/Header.js":"6"},{"size":560,"mtime":1607242838086,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1607241191956,"results":"9","hashOfConfig":"8"},{"size":728,"mtime":1607260762744,"results":"10","hashOfConfig":"8"},{"size":2689,"mtime":1607259844947,"results":"11","hashOfConfig":"8"},{"size":9400,"mtime":1607260091382,"results":"12","hashOfConfig":"8"},{"size":872,"mtime":1607260707356,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1wvuk4",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/index.js",[],["30","31"],"/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/reportWebVitals.js",[],"/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/App.js",["32","33","34","35"],"/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/pages/Recipes.js",["36"],"import React, { Component } from \"react\";\nimport './Recipes.css';\nimport { Table } from \"react-bootstrap\";\n\nclass SelectedIngredients extends React.Component {\n    render() {\n      return (\n        <div>\n            <ul>\n                {this.props.selectedIngred.map((ingredient) =>\n        <li>{ingredient}</li>)}\n            </ul>\n        </div>\n      );\n    }\n  }\n\n\nfunction Recipe(props) {\n    return (\n        <div className=\"recipe\">\n                <Table bordered hover>\n                    <tbody>\n                        <tr> <td>{props.recipe.title}</td> </tr>\n                        <tr> <td>Ingredients</td>\n                            <td>{props.recipe.ingredients}</td>\n                        </tr>\n                        <tr> <td>{props.recipe.href}</td>  </tr>\n                    </tbody>\n                </Table>\n        </div>\n    );\n  }\n\n\nclass Recipes extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          recipes: [],\n        };\n      }\n\n    fetchRecipes(selectedIngred, pageInd){\n        console.log(\"inside fetchRecipes\")\n        let url = \"https://recipepuppyproxy.herokuapp.com/api/?i=\" + selectedIngred.join() + \"&p=\" + pageInd;\n        console.log(url)\n        fetch(url)\n        .then(res => res.json())\n        .then( (result) => {\n            this.setState({\n                recipes: result.results,\n            });\n        },\n        (error) => {\n            console.log(error);\n        });  \n    }\n\n    componentDidMount(){\n        console.log(\"inside componentDidMount\")\n        console.log(this.props.selectedIngred)\n        this.fetchRecipes(this.props.selectedIngred, 1)\n    }\n\n    render() {\n      return (\n        <div className=\"folioWrapper\">\n            {\n                this.state.recipes.map((recipe, i) => (\n                    <Recipe recipe={recipe} index={i} />\n                ))\n            }\n        </div>\n    );\n\n    }\n  }\n\n  \n  export class RecipesPage extends React.Component {\n    constructor(props) {\n        super(props);\n        // console.log(\"props.location.selectedIngred below\")\n        // console.log(props)\n        this.state = {\n            selectedIngred: []\n        }\n        \n    };\n    \n    render() {\n        const { selectedIngred } = this.props.location // or this.props.location.selectedIngred\n        return (\n            <div>\n                <div className=\"SelectedIngredients\">\n                    <SelectedIngredients selectedIngred={ selectedIngred } />\n                </div>\n\n                <div className=\"Recipes\">\n                    <Recipes selectedIngred={ selectedIngred }/>\n                </div>\n            </div>\n        );\n    }\n    \n}","/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/pages/GroceryList.js",["37","38","39","40","41","42","43","44"],"import React, { useState } from \"react\";\nimport './GroceryList.css';\nimport { InputGroup, FormControl, Button, Table } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useParams\n} from \"react-router-dom\";\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.textInput = React.createRef();\n    }\n    render() {\n        return (\n            <InputGroup className=\"mb-3\">\n                <InputGroup.Prepend>\n                    <InputGroup.Text id=\"basic-addon1\">Enter Ingredient</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                    ref={this.textInput}\n                    placeholder=\"Ingredient\"\n                    aria-label=\"Ingredient\"\n                    aria-describedby=\"Ingredient-field\"\n                />\n                <InputGroup.Append>\n                    <Button\n                        variant=\"secondary\"\n                        type=\"Submit\"\n                        onClick={() => { this.props.addIngredient(this.textInput.current.value) }}\n                    >+ Add</Button>\n                </InputGroup.Append>\n            </InputGroup>\n        )\n    }\n}\n\nclass List extends React.Component {\n\n    render() {\n        return (\n            <div className=\"groceryListList\">\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Ingredient</th>\n                            <th>Expiry Date</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.ingredients.map((ingredient) => (\n                            <ListRow\n                                key={ingredient.id}\n                                ingredient={ingredient}\n                                select={(i) => this.props.select(i)}\n                                isSelected={(i) => this.props.isSelected(i)}\n                                deleteIngredient={(i) => this.props.deleteIngredient(i)}\n                                editIngredient={(i, n, e) => this.props.editIngredient(i, n, e)}\n                            ></ListRow>\n                        ))}\n                    </tbody>\n                </Table>\n            </div>\n        )\n    }\n}\n\nexport class ListRow extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isEditing: false,\n        }\n        this.nameInput = React.createRef();\n        this.dateInput = React.createRef();\n        this.save = this.save.bind(this);\n    }\n\n    formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n\n        if (month.length < 2)\n            month = '0' + month;\n        if (day.length < 2)\n            day = '0' + day;\n\n        return [year, month, day].join('-');\n    }\n\n    save() {\n        this.setState({ isEditing: false });\n        this.props.editIngredient(this.props.ingredient.id, this.nameInput.current.value, new Date(this.dateInput.current.value))\n    }\n\n    render() {\n        return (\n            <tr className={this.props.isSelected(this.props.ingredient.id) ? \"trActive\" : \"\"}\n                onClick={() => this.props.select(this.props.ingredient.id)}>\n                <td>{this.state.isEditing ? (\n                    <div>\n                        <FormControl\n                            ref={this.nameInput}\n                            defaultValue={this.props.ingredient.name}\n                            aria-label=\"Ingredient\"\n                            aria-describedby=\"Ingredient-name\"\n                        />\n                    </div>\n                ) : (\n                        <div>{this.props.ingredient.name}</div>)\n                }</td>\n                <td>\n                    {this.state.isEditing ? (\n                        <div className=\"ingredientExpiry\">\n                            <FormControl\n                                className=\"ingredientExpiryForm\"\n                                ref={this.dateInput}\n                                defaultValue={this.formatDate(this.props.ingredient.expiryDate)}\n                                aria-label=\"Date\"\n                                aria-describedby=\"Date\"\n                            />\n                            <div>\n                                <Button\n                                    variant=\"outline-secondary\"\n                                    onClick={this.save}\n                                    className=\"saveButton\"\n                                >Save</Button>\n                                <Button\n                                    variant=\"outline-danger\"\n                                    onClick={() => this.props.deleteIngredient(this.props.ingredient.id)}\n                                >Delete</Button>\n                            </div>\n                        </div>\n                    ) : (\n                            <div className=\"ingredientExpiry\">\n                                {this.formatDate(this.props.ingredient.expiryDate)}\n                                <div>\n                                    <Button\n                                        variant=\"outline-secondary\"\n                                        onClick={() => { this.setState({ isEditing: true }) }}\n                                        className=\"editButton\"\n                                    >Edit</Button>\n                                    <Button\n                                        variant=\"outline-danger\"\n                                        onClick={() => this.props.deleteIngredient(this.props.ingredient.id)}\n                                    >Delete</Button>\n                                </div>\n                            </div>)}\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport class Page extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nextid: 2,\n            ingredients: [\n                {\n                    id: 0,\n                    name: \"Apple\",\n                    expiryDate: Date.now()\n                },\n                {\n                    id: 1,\n                    name: \"Milk\",\n                    expiryDate: Date.now()\n                }\n            ],\n            expiryDB: [\n                {\n                    name: \"Apple\",\n                    expiryTimeFrame: 10 // days\n                },\n                {\n                    name: \"Bread\",\n                    expiryTimeFrame: 10 // days\n                },\n                {\n                    name: \"Milk\",\n                    expiryTimeFrame: 10 // days\n                },\n            ],\n            selected: []\n        }\n    }\n\n    addIngredient(ingredientName) {\n        var expire = new Date();\n\n        for (const item of this.state.expiryDB) {\n            if (item.name == ingredientName) {\n                expire.setDate(expire.getDate() + item.expiryTimeFrame);\n                break;\n            }\n        }\n\n        let ingredient = {\n            id: this.state.nextid,\n            name: ingredientName,\n            expiryDate: expire\n        }\n        this.setState({ nextid: this.state.nextid + 1, ingredients: [...this.state.ingredients, ingredient] })\n    }\n\n    editIngredient(id, name, expiryDate) {\n        for (const item of this.state.ingredients) {\n            if (item.id == id) {\n                item.name = name;\n                item.expiryDate = expiryDate;\n                break;\n            }\n        }\n    }\n\n    deleteIngredient(id) {\n        var array = [...this.state.ingredients]; // make a separate copy of the array\n        var index = array.findIndex((i) => { return i.id === id });\n        if (index !== -1) {\n            array.splice(index, 1);\n            this.setState({ ingredients: array });\n        }\n    }\n\n    isSelected(id) {\n        return this.state.selected.indexOf(id) !== -1;\n    }\n\n    select(id) {\n        var array = [...this.state.selected]; // make a separate copy of the array\n        var index = array.indexOf(id);\n        console.log(index);\n        if (index == -1) {\n            console.log(\"adding\");\n            this.setState({ selected: [...this.state.selected, id] })\n        } else {\n            console.log(\"deleting\");\n            array.splice(index, 1);\n            this.setState({ selected: array });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"groceryListBody\">\n                <div className=\"groceryListInner\">\n                    <Input\n                        addIngredient={(i) => this.addIngredient(i)}\n                    ></Input>\n                    <List\n                        ingredients={this.state.ingredients}\n                        editIngredient={(i, n, e) => this.editIngredient(i, n, e)}\n                        deleteIngredient={(i) => this.deleteIngredient(i)}\n                        select={(i) => this.select(i)}\n                        isSelected={(i) => this.isSelected(i)}\n                    ></List>\n                    <Link to=\"/recipes\"><Button className=\"greenButton\" variant=\"primary\">Generate Recipes!</Button></Link>\n                </div>\n            </div>\n        )\n    }\n}","/Users/annawei/Hackathon/201205HackDuke/ConServe/website/src/components/Header.js",["45","46","47","48","49"],"import React from \"react\";\nimport Logo from '../img/logo-white.png'\nimport './Header.css';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useParams\n} from \"react-router-dom\";\n\nexport default class Header extends React.Component {\n    render() {\n        let ingred = ['onions', 'garlic', 'mushroom']\n        return (\n            <div className=\"headerOuter\">\n                <img src={Logo}></img>\n                <div>\n                    <Link to=\"/groceries\">My Groceries</Link>\n\n                    <Link\n                        to={{\n                        pathname: \"/recipes\",\n                        // state:\"test\",\n                        // selectedIngred: fruits\n                        selectedIngred: ingred \n                    }}>Recipes</Link>\n\n                    \n                </div>\n            </div>\n        );\n    }\n}",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":17,"nodeType":"56","messageId":"57","endLine":2,"endColumn":26},{"ruleId":"54","severity":1,"message":"58","line":3,"column":8,"nodeType":"56","messageId":"57","endLine":3,"endColumn":12},{"ruleId":"54","severity":1,"message":"59","line":10,"column":3,"nodeType":"56","messageId":"57","endLine":10,"endColumn":7},{"ruleId":"54","severity":1,"message":"60","line":11,"column":3,"nodeType":"56","messageId":"57","endLine":11,"endColumn":12},{"ruleId":"54","severity":1,"message":"55","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":26},{"ruleId":"54","severity":1,"message":"61","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},{"ruleId":"54","severity":1,"message":"62","line":7,"column":22,"nodeType":"56","messageId":"57","endLine":7,"endColumn":28},{"ruleId":"54","severity":1,"message":"63","line":8,"column":5,"nodeType":"56","messageId":"57","endLine":8,"endColumn":11},{"ruleId":"54","severity":1,"message":"64","line":9,"column":5,"nodeType":"56","messageId":"57","endLine":9,"endColumn":10},{"ruleId":"54","severity":1,"message":"60","line":11,"column":5,"nodeType":"56","messageId":"57","endLine":11,"endColumn":14},{"ruleId":"65","severity":1,"message":"66","line":202,"column":27,"nodeType":"67","messageId":"68","endLine":202,"endColumn":29},{"ruleId":"65","severity":1,"message":"66","line":218,"column":25,"nodeType":"67","messageId":"68","endLine":218,"endColumn":27},{"ruleId":"65","severity":1,"message":"66","line":243,"column":19,"nodeType":"67","messageId":"68","endLine":243,"endColumn":21},{"ruleId":"54","severity":1,"message":"62","line":6,"column":22,"nodeType":"56","messageId":"57","endLine":6,"endColumn":28},{"ruleId":"54","severity":1,"message":"63","line":7,"column":5,"nodeType":"56","messageId":"57","endLine":7,"endColumn":11},{"ruleId":"54","severity":1,"message":"64","line":8,"column":5,"nodeType":"56","messageId":"57","endLine":8,"endColumn":10},{"ruleId":"54","severity":1,"message":"60","line":10,"column":5,"nodeType":"56","messageId":"57","endLine":10,"endColumn":14},{"ruleId":"69","severity":1,"message":"70","line":18,"column":17,"nodeType":"71","endLine":18,"endColumn":33},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'Link' is defined but never used.","'useParams' is defined but never used.","'useState' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]